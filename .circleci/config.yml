version: 2.1

references:
  container_config: &container_config
    docker:
      - image: 'circleci/node:10-stretch'
  restore_yarn_cache: &restore_yarn_cache
    restore_cache:
      name: Restore Yarn Package Cache
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
  save_cache: &save_cache
    save_cache:
      name: Save Yarn Package Cache
      key: yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn
  install_sonar: &install_sonar
    run:
      name: Install SonarScanner
      command: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.0.0.1744-linux.zip
        unzip sonar-scanner-cli-4.0.0.1744-linux.zip
  yarn_install: &yarn_install
    run:
      name: Yarn install
      command: yarn install --frozen-lockfile
  run_sonar: &run_sonar
    run:
      name: Run Sonarqube scanner
      command: |
        export SONAR_SCANNER_OPTS="-Xmx2048m"
        eval ./sonar-scanner-4.0.0.1744-linux/bin/sonar-scanner
        -Dsonar.projectKey=issuer \
        -Dsonar.sources=. \
        -Dsonar.sourceEncoding=US-ASCII \
        -Dsonar.exclusions=vendor/bundle/** \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.projectVersion=0 \
        -Dsonar.login=${SONARQUBE_TOKEN} $SONAR_SCANNER_OPTS_CUSTOM

jobs:
  install_dependencies:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
  new_issuer_tests:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:new-issuer
  new_issuer_build:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn build:new-issuer
  issuer_build:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn build:issuer
  issuer_tests:
    <<: *container_config
    steps:
      - checkout
      - *install_sonar
      - *run_sonar
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:issuer
  ui_tests:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:ui
  offchain_tests:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:offchain
  new_sdk_tests:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:sdk
  new_ui_tests:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:new-ui
  new_shared_tests:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn test:new-shared
  typecheck:
    <<: *container_config
    steps:
      - checkout
      - *restore_yarn_cache
      - *yarn_install
      - *save_cache
      - run: yarn build:typedefs

workflows:
  version: 2
  unit_tests:
    jobs:
      - install_dependencies
      - new_issuer_tests:
          requires:
            - install_dependencies
      - new_ui_tests:
          requires:
            - install_dependencies
      - new_sdk_tests:
          requires:
            - install_dependencies
      - new_shared_tests:
          requires:
            - install_dependencies
      - issuer_tests:
          requires:
            - install_dependencies
      - ui_tests:
          requires:
            - install_dependencies
      - offchain_tests:
          requires:
            - install_dependencies
  type_checking:
    jobs:
      - install_dependencies
      - typecheck
